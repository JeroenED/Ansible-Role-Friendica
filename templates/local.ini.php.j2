<?php return <<<INI
[database]
; host (String)
; Hostname or IP address of the database server.
; Can contain the port number with the syntax "hostname:port".
hostname = "{{ friendica_database_host }}"

; user (String)
; Database user name. Please don't use "root".
username ="{{ friendica_database_user }}"

; pass (String)
; Database user password. Please don't use empty passwords.
password = "{{ friendica_database_pass }}"

; base (String)
; Database name.
database = "{{ friendica_database_data }}"

; charset (String)
; Database connexion charset. Changing this value will likely corrupt special characters.
charset = "{{ friendica_database_charset }}"

[config]

; php_path (String)
; Location of PHP command line processor.
php_path = "{{ friendica_config_php-path }}"

; admin_email (Comma-separated list)
; In order to perform system administration via the admin panel, this must precisely match the email address of the person logged in.
admin_email = "{{ friendica_config_admin-email | join(',') }}"

; admin_nickname (String)
; Nickname of the main admin user, used if there are more than one admin user defined in config.admin_email.
admin_nickname = "{{ friendica_config_admin-nickname }}"

; max_import_size (Integer)
; Maximum body size of DFRN and Mail messages in characters. 0 is unlimited.
max_import_size = "{{ friendica_config_max-import-size }}"

; sitename (string)
; What is your site called
sitename = "{{ friendica_config_sitename }}"

; sender_email (Email)
; E-mailaddress who sends out system emails
sender_email = "{{ friendica_config_admin-nickname }}"

; Register_policy (Integer)
; Defines who can register
; Possible values: 0 => No registrations, 1 => Approval required, 2 => Open registrations 
register_policy = "{{ friendica_config_register-policy }}"

; Register_text (String)
; Text that is prominently present on the registration page
register_text = "{{ friendica_config_register-text }}"

; Register_text (String)
; Info that is available on public directories
info = "{{ friendica_config_info }}"

[system]

; allowed_link_protocols (Array)
; Allowed protocols in links URLs, add at your own risk. http is always allowed.
{% for item in friendica_config_system_allowed-link-protocols %}
allowed_link_protocols[{{loop.index}}] = {{ item }}
{% endfor %}

; always_show_preview (Boolean)
; Only show small preview picures.
always_show_preview = "{{ friendica_config_system_always-show-preview }}"

; archival_days (Integer)
; Number of days that we try to deliver content before we archive a contact.
archival_days = "{{ friendica_config_system_archival-days }}"

; auth_cookie_lifetime (Integer)
; Number of days that should pass without any activity before a user who chose "Remember me" when logging in is considered logged out.
auth_cookie_lifetime = "{{ friendica_config_system_auth-cookie-lifetime }}"

; block_local_dir (Boolean)
; Deny public access to the local user directory.
block_local_dir = "{{ friendica_config_system_block-local-dir }}"

; cache_driver (database|memcache|memcached|redis)
; Whether to use Memcache or Memcached or Redis to store temporary cache.
cache_driver = "{{ friendica_config_system_cache-driver }}"

; config_adapter (jit|preload)
; Allow to switch the configuration adapter to improve performances at the cost of memory consumption.
config_adapter = "{{ friendica_config_system_config-adapter }}"

; curl_range_bytes (Integer)
; Maximum number of bytes that should be fetched. Default is 0, which mean "no limit".
curl_range_bytes = "{{ friendica_config_system_curl-range-bytes }}"

; crawl_permit_period (Integer)
; Period in seconds between allowed searches when the number of free searches is reached and "permit_crawling" is activated.
crawl_permit_period = "{{ friendica_config_system_crawl-permit-period }}"

; db_log (Path)
; Name of a logfile to log slow database queries.
db_log = "{{ friendica_config_system_db-log }}"

; db_log_index (Path)
; Name of a logfile to log queries with bad indexes.
db_log_index = "{{ friendica_config_system_db-log-index }}"

; db_log_index_watch (Comma-separated list)
; Watchlist of indexes to watch.
db_log_index_watch = "{{ friendica_config_system_db-log-index-watch | join(',') }}"

; db_log_index_blacklist (Comma-separated list)
; Blacklist of indexes that shouldn't be watched.
db_log_index_blacklist = "{{ friendica_config_system_db-log-index-blacklist | join(',') }}"

; db_loglimit (Integer)
; If a database call lasts longer than this value in seconds it is logged.
; Inactive if system.db_log is empty.
db_loglimit = "{{ friendica_config_system_db-loglimit }}"

; db_loglimit_index (Integer)
; Number of index rows needed to be logged for indexes on the watchlist. 0 to disable.
db_loglimit_index = "{{ friendica_config_system_db-loglimit-index }}"

; db_loglimit_index_high (Integer)
; Number of index rows to be logged anyway (for any index). 0 to disable.
db_loglimit_index_high = "{{ friendica_config_system_db-loglimit-index-high }}"

; dbclean (Integer)
; Turn on DBClean
; Possible values: 0 => off; 1 => on
dbclean = "{{ friendica_config_system_dbclean }}"

; dbclean_expire_conversation (Integer)
; When DBClean is enabled, any entry in the conversation table will be deleted after this many days.
; These data are normally needed only for debugging purposes and they are safe to delete.
dbclean_expire_conversation = "{{ friendica_config_system_dbclean-expire-conversation }}"

; dbclean_expire_days (Integer)
; When the database cleanup is enabled, this defines the days after which remote items will be deleted.
; Own items, and marked or filed items are always kept. 0 disables this behaviour.
dbclean_expire_days = "{{ friendica_config_system_dbclean-expire-days }}"

; dbclean_expire_unclaimed (Integer)
; When the database cleanup is enabled, this defines the days after which unclaimed remote items (mostly content from the relay) will be deleted.
; Default value is 90 days. Defaults to the general lifespan value of remote items if set to 0.
dbclean_expire_unclaimed = "{{ friendica_config_system_dbclean-expire-unclaimed }}"

; relay_subscribe (boolean)
Enables the receiving of public posts from the relay. They will be included in the search, subscribed tags and on the global community page.
relay_subscribe = "{{ friendica_config_system_relay-subscribe }}"

; relay_server (String)
; Address of the relay server where public posts should be send to. For example https://relay.diasp.org
relay_server = h"{{ friendica_config_system_relay-server }}"

; relay_directly (Boolean)
; Enables the direct transfer to other servers without using the relay servers
relay_directly = "{{ friendica_config_system_relay-directly }}"

; relay_scope (all|tags)
; Can be 'all' or 'tags'.
; 'all' means that every public post should be received.
; 'tags' means that only posts with selected tags should be received.
relay_scope = "{{ friendica_config_system_relay-scope }}"

; relay_server_tags (String)
; Comma separated list of tags for the 'tags' subscription.
relay_server_tags = "{{ friendica_config_relay-server-tags | join(',') }}"

; relay_user_tags (boolean)
; If enabled, the tags from the saved searches will used for the 'tags' subscription in addition to the 'relay_server_tags'.
relay_user_tags = "{{ friendica_config_system_relay-user-tags }}"

; diaspora_test (Boolean)
; For development only. Disables the message transfer.
diaspora_test = "{{ friendica_config_system_diaspora-test }}"

; disable_email_validation (Boolean)
; Disables the check if a mail address is in a valid format and can be resolved via DNS.
disable_email_validation = "{{ friendica_config_system_disable-email-validation }}"

; disable_url_validation (Boolean)
; Disables the DNS lookup of an URL.
disable_url_validation = "{{ friendica_config_system_disable-url-validation }}"

; disable_password_exposed (Boolean)
; Disable the exposition check against the remote haveibeenpwned API on password change.
disable_password_exposed = "{{ friendica_config_system_disable-password-exposed }}"

; dlogfile (Path)
; location of the developer log file.
dlogfile = "{{ friendica_config_system_dlogfile }}"

; dlogip (String)
; restricts develop log writes to requests originating from this IP address.
dlogip = "{{ friendica_config_system_dlogip }}"

; free_crawls (Integer)
; Number of "free" searches when system.permit_crawling is activated.
free_crawls = "{{ friendica_config_system_free-crawls }}"

; frontend_worker_timeout (Integer)
; Value in minutes after we think that a frontend task was killed by the webserver.
frontend_worker_timeout = "{{ friendica_config_system_frontend-worker-timeout }}"

; groupedit_image_limit (Integer)
; Number of contacts at which the group editor should switch from display the profile pictures of the contacts to only display the names.
; This can alternatively be set on a per account basis in the pconfig table.
groupedit_image_limit = "{{ friendica_config_system_groupedit-image-limit }}"

; hsts (Boolean)
; Enables the sending of HTTP Strict Transport Security headers.
hsts = "{{ friendica_config_system_hsts }}"

; ignore_cache (Boolean)
; For development only. Disables the item cache.
ignore_cache = "{{ friendica_config_system_ignore-cache }}"

; instances_social_key (String)
; Key to the API of https://instances.social which retrieves data about mastodon servers.
; See https://instances.social/api/token to get an API key.
instances_social_key = "{{ friendica_config_system_instances-social-key }}"

; ipv4_resolve (Boolean)
; Resolve IPV4 addresses only. Don't resolve to IPV6.
ipv4_resolve = "{{ friendica_config_system_ipv4-resolve }}"

; invitation_only (Boolean)
; If set true registration is only possible after a current member of the node has send an invitation.
invitation_only = "{{ friendica_config_system_invitation-only }}"

; like_no_comment (Boolean)
; Don't update the "commented" value of an item when it is liked.
like_no_comment = "{{ friendica_config_system_like-no-comment }}"

; local_block (Boolean)
; Used in conjunction with "block_public".
local_block = "{{ friendica_config_system_local-block }}"

; local_search (Boolean)
; Blocks search for users who are not logged in to prevent crawlers from blocking your system.
local_search = "{{ friendica_config_system_local-search }}"

; local_tags (Boolean)
; If activated, all hashtags will point to the local server.
local_tags = "{{ friendica_config_system_local-tags }}"

; max_batch_queue (Integer)
; Maximum number of batched queue items for a single contact before subsequent messages are discarded.
max_batch_queue = "{{ friendica_config_system_max-batch-queue }}"

; max_connections (Integer)
; The maximum number of database connections which can be in use before the worker process is deferred to its next interval.
; When the system can't detect the maximum numbers of connection then this value can be used. Use 0 for auto-detection.
max_connections = "{{ friendica_config_system_max-connections }}"

; max_connections_level (Integer 0-100)
; The maximum percentage of connections that are allowed to let the worker start.
max_connections_level = "{{ friendica_config_system_max-connections-level }}"

; max_contact_queue (Integer)
; Maximum number of queue items for a single contact before subsequent messages are discarded.
max_contact_queue = "{{ friendica_config_system_max-contact-queue }}"

; max_image_length (Integer)
; An alternate way of limiting picture upload sizes.
; Specify the maximum pixel  length that pictures are allowed to be (for non-square pictures, it will apply to the longest side).
; Pictures longer than this length will be resized to be this length (on the longest side, the other side will be scaled appropriately).
; If you don't want to set a maximum length, set to -1.
max_image_length = "{{ friendica_config_system_max-image-length }}"

; max_processes_backend (Integer)
; Maximum number of concurrent database processes for background tasks.
max_processes_backend = "{{ friendica_config_system_max-processes-backend }}"

; max_processes_frontend (Integer)
; Maximum number of concurrent database processes for foreground tasks.
max_processes_frontend = "{{ friendica_config_system_max-processes-frontend }}"

; maximagesize (Integer)
; Maximum size in bytes of an uploaded photo.
maximagesize = "{{ friendica_config_system_max-processes-frontend }}"

; memcache_host (String)
; Host name of the memcache daemon.
memcache_host = "{{ friendica_config_system_memcache_host }}"

; memcache_port (Integer)
; Port number of the memcache daemon.
memcache_port = "{{ friendica_config_system_memcache-port }}"

; memcached_hosts (Array)
; Array of Memcached servers info "host, port(, weight)".
{% for item in friendica_config_system_memcached-hosts %}
memcached_hosts[{{loop.index}}] = {{ item }}
{% endfor %}

; min_poll_interval (Integer)
; minimal distance in minutes between two polls for a contact. Reasonable values are between 1 and 59.
min_poll_interval = "{{ friendica_config_system_min-poll-interval }}"

; no_count (Boolean)
; Don't do count calculations (currently only when showing albums).
no_count = "{{ friendica_config_system_no-count }}"

; no_oembed (Boolean)
; Don't use OEmbed to fetch more information about a link.
no_oembed = "{{ friendica_config_system_no-embed }}"

; no_smilies (Boolean)
; Don't show smilies.
no_smilies = "{{ friendica_config_system_no-smilies }}"

; no_view_full_size (Boolean)
; Don't add the link "View full size" under a resized image.
no_view_full_size = "{{ friendica_config_system_no-view-full-size }}"

; optimize_items (Boolean)
; Triggers an SQL command to optimize the item table before expiring items.
optimize_items = "{{ friendica_config_system_optimize-items }}"

; paranoia (Boolean)
; Log out users if their IP address changed.
paranoia = "{{ friendica_config_system_paranoia }}"

; permit_crawling (Boolean)
; Restricts the search for not logged in users to one search per minute.
permit_crawling = "{{ friendica_config_system_permit-crawling }}"

; pidfile (Path)
; Daemon pid file path. For example: pidfile = /path/to/daemon.pid
pidfile = "{{ friendica_config_system_pidfile }}"

; png_quality (Integer)
; Sets the ImageMagick compression level for PNG images. Values ranges from 0 (uncompressed) to 9 (most compressed).
png_quality = "{{ friendica_config_system_pngquality }}"

; profiler (Boolean)
; Enable internal timings to help optimize code. Needed for "rendertime" addon.
profiler = "{{ friendica_config_system_profiler }}"

; proxy_cache_time (Integer)
; Period in seconds after which the cache is cleared.
proxy_cache_time = "{{ friendica_config_system_proxy-cache-time }}"

; pushpoll_frequency (Integer)
; Frequency of contact poll for subhub contact using the DFRM or OStatus network.
; Available values:
; - 5 = every month
; - 4 = every week
; - 3 = every day
; - 2 = twice a day
; - 1 = every hour
; - 0 = every minute
pushpoll_frequency = "{{ friendica_config_system_pushpoll-frequency }}"

; queue_no_dead_check (Boolean)
; Ignore if the target contact or server seems to be dead during queue delivery.
queue_no_dead_check = "{{ friendica_config_system_queue-no-dead-check }}"

; redis_host (String)
; Host name of the redis daemon.
redis_host = "{{ friendica_config_system_redis-host }}"

; redis_port (String)
; Port number of the redis daemon.
redis_port = "{{ friendica_config_system_redis-port }}"

; session_handler (database|cache|native)
; Whether to use Cache to store session data or to use PHP native session storage.
session_handler = "{{ friendica_config_system_session-handler }}"

; remove_multiplicated_lines (Boolean)
; If enabled, multiple linefeeds in items are stripped to a single one.
remove_multiplicated_lines = "{{ friendica_config_system_remove-multiplicated-lines }}"

; sendmail_params (Boolean)
; Normal sendmail command parameters will be added when the PHP mail() function is called for sending e-mails.
; This ensures the Sender Email address setting is applied to the message envelope rather than the host's default address.
; Set to false if your non-sendmail agent is incompatible, or to restore old behavior of using the host address.
sendmail_params = "{{ friendica_config_system_sendmail-params }}"

; show_global_community_hint (Boolean)
; When the global community page is enabled, use this option to display a hint above the stream, that this is a collection of all public top-level postings that arrive on your node.
show_global_community_hint = "{{ friendica_config_system_show-global-community-hint }}"

; show_unsupported_addons (Boolean)
; Show all addons including the unsupported ones.
show_unsupported_addons = "{{ friendica_config_system_show-global-community-hint }}"

; show_unsupported_themes (Boolean)
; Show all themes including the unsupported ones.
show_unsupported_themes = "{{ friendica_config_system_show-unsupported-themes }}"

; throttle_limit_day (Integer)
; Maximum number of posts that a user can send per day with the API. 0 to disable daily throttling.
throttle_limit_day = "{{ friendica_config_system_throttle-limit-day }}"

; throttle_limit_week (Integer)
; Maximum number of posts that a user can send per week with the API. 0 to disable weekly throttling.
throttle_limit_week = "{{ friendica_config_system_throttle-limit-week }}"

; throttle_limit_month (Integer)
; Maximum number of posts that a user can send per month with the API. 0 to disable monthly throttling.
throttle_limit_month = "{{ friendica_config_system_throttle-limit-month }}"

; urlpath (String)
; If you are using a subdirectory of your domain you will need to put the relative path (from the root of your domain) here.
; For instance if your URL is 'http://example.com/directory/subdirectory', set urlpath to 'directory/subdirectory'.
urlpath = "{{ friendica_config_system_url-path }}"

; worker_cooldown (Integer)
; Cooldown period in seconds after each worker function call.
worker_cooldown = "{{ friendica_config_system_worker-cooldown }}"

; worker_debug (Boolean)
; If enabled, it prints out the number of running processes split by priority.
worker_debug = "{{ friendica_config_system_worker-debug }}"

; worker_fetch_limit (Integer)
; Number of worker tasks that are fetched in a single query.
worker_fetch_limit = "{{ friendica_config_system_worker-fetch-limit }}"

; worker_load_exponent (Integer)
; Default 3, which allows only 25% of the maximum worker queues when server load reaches around 37% of maximum load.
; For a linear response where 25% of worker queues are allowed at 75% of maximum load, set this to 1.
; Setting 0 would allow maximum worker queues at all times, which is not recommended.
worker_load_exponent = "{{ friendica_config_system_worker-load-exponent }}"

; xrd_timeout (Integer)
; Timeout in seconds for fetching the XRD links.
xrd_timeout = "{{ friendica_config_system_xrd-timeout }}"

[experimental]

; exp_themes (Boolean)
; Show experimental themes in user settings.
exp_themes = "{{ friendica_config_experimental_exp-themes }}"

[theme]

; hide_eventlist (Boolean)
; Don't show the birthdays and events on the profile and network page.
hide_eventlist = "{{ friendica_config_theme_hide-eventlist }}"

[jabber]

; debug (Boolean)
; Enable debug level for the jabber account synchronisation.
debug = "{{ friendica_config_jabber_debug }}"

; lockpath (Path)
; Must be writable by the ejabberd process. if set then it will prevent the running of multiple processes.
lockpath = "{{ friendica_config_jabber_lockpath }}"

INI;
// Keep this line
